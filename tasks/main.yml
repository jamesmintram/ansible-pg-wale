- name: install dependent packages
  sudo: true
  apt: >
    name={{item}}
    state=present
  with_items:
    - python3-pip
    - python3-dev
    - lzop
    - pv
    - daemontools

- name: install wal-e
  become_user: "{{pg_wale_user}}"
  command: pip3 install boto boto3 wal-e envdir

- name: create env directory
  sudo: true
  file: >
    state=directory
    owner={{pg_wale_user}}
    group={{pg_wale_user}}
    path={{pg_wale_env_folder}}

#---------------------------------------------------------

- name: create env file for AWS_SECRET_ACCESS_KEY
  sudo: true
  template: >
    src=AWS_SECRET_ACCESS_KEY.j2
    dest={{pg_wale_env_folder}}/AWS_SECRET_ACCESS_KEY
    owner={{pg_wale_user}}
    group={{pg_wale_user}}
    mode=640

- name: create env file for AWS_ACCESS_KEY_ID
  sudo: true
  template: >
    src=AWS_ACCESS_KEY_ID.j2
    dest={{pg_wale_env_folder}}/AWS_ACCESS_KEY_ID
    owner={{pg_wale_user}}
    group={{pg_wale_user}}
    mode=640

- name: create env file for AWS_REGION
  sudo: true
  template: >
    src=AWS_REGION.j2
    dest={{pg_wale_env_folder}}/AWS_REGION
    owner={{pg_wale_user}}
    group={{pg_wale_user}}
    mode=640

- name: create env file for WALE_S3_PREFIX
  sudo: true
  template: >
    src=WALE_S3_PREFIX.j2
    dest={{pg_wale_env_folder}}/WALE_S3_PREFIX
    owner={{pg_wale_user}}
    group={{pg_wale_user}}
    mode=640

#---------------------------------------------------------

- name: Setup cron job for the base backup
  cron: |
    name=wal_e_base_backup
    cron_file=pg_wale_base_backup
    minute="{{ pg_wale_base_backup_minute }}"
    hour="{{ pg_wale_base_backup_hour }}"
    day="{{ pg_wale_base_backup_day }}"
    weekday="{{ pg_wale_base_backup_weekday}}"
    month="{{ pg_wale_base_backup_month }}"
    user="{{ pg_wale_user }}"
    job="/var/lib/{{ pg_wale_user }}/.local/bin/envdir {{ pg_wale_env_folder }} /var/lib/{{ pg_wale_user }}/.local/bin/wal-e backup-push  {{ pg_wale_pgdata_dir }}"
