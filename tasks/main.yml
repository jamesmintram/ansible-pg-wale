- name: install dependent packages
  sudo: true
  apt: >
    name={{item}}
    state=present
  with_items:
    - python3-pip
    - python3-dev
    - lzop
    - pv
    - daemontools

- name: clone wal-e tool
  sudo: true
  git: >
    repo={{pg_wale_repo}}
    dest=/tmp/wal-e
    version={{pg_wale_version}}
    force=yes
    accept_hostkey=yes

- name: upgrade setuptools
  sudo: true
  command: pip3 install setuptools --upgrade

- name: install boto
  sudo: true
  command: pip3 install boto

- name: install wal-e
  sudo: true
  command: python3 setup.py install
  args:
    chdir: /tmp/wal-e

- name: remove the install files
  sudo: true
  file: >
    state=absent
    path=/tmp/wal-e

- name: create env directory
  sudo: true
  file: >
    state=directory
    owner={{pg_wale_user}}
    group={{pg_wale_user}}
    path={{pg_wale_env_folder}}

- name: create env file for AWS_REGION
  sudo: true
  template: >
    src=AWS_REGION.j2
    dest={{pg_wale_env_folder}}/AWS_REGION
    owner={{pg_wale_user}}
    group={{pg_wale_user}}
    mode=640

- name: create env file for AWS_SECRET_ACCESS_KEY
  sudo: true
  template: >
    src=AWS_SECRET_ACCESS_KEY.j2
    dest={{pg_wale_env_folder}}/AWS_SECRET_ACCESS_KEY
    owner={{pg_wale_user}}
    group={{pg_wale_user}}
    mode=640

- name: populate an example recovery file
  sudo: true
  template: >
    src=recovery.example.j2
    dest={{pg_wale_pg_directory}}/recovery.example
    owner={{pg_wale_user}}
    group={{pg_wale_user}}
    mode=755
